dnl $Id: configure.in,v 1.135 1998/02/02 04:50:35 ssb Exp $
dnl Process this file with autoconf to produce a configure script.

AC_INIT(main.c)

PHP_VERSION=`cut -d\" -f 2 version.h`
AC_SUBST(PHP_VERSION)

AC_CONFIG_HEADER(config.h)
AM_SANITY_CHECK
AM_MAINTAINER_MODE

dnl We want this one before the checks, so the checks can modify CFLAGS.
test -z "$CFLAGS" && auto_cflags=1

dnl Checks for programs.
AC_PROG_YACC
AC_PROG_CC
AC_PROG_RANLIB
AC_PROG_CC_C_O
dnl Haven't quite figured out how to make libtool go yet
dnl AM_PROG_LIBTOOL
dnl AC_PROG_INSTALL
AC_PATH_PROG(PROG_SENDMAIL, sendmail, /usr/lib/sendmail, $PATH:/usr/bin:/usr/sbin:/usr/etc:etc)
if test -n "$PROG_SENDMAIL"; then
  AC_DEFINE(HAVE_SENDMAIL)
fi

dnl Checks for libraries.
dnl use gdbm, Berkeley DB, ndbm/dbm in that order
AC_CHECKING(best dbm library available on system)
AC_CHECK_LIB(dbm, dbm_open, AC_DEFINE(NDBM) best_dbm=-ldbm)
AC_CHECK_LIB(db, dbm_open, AC_DEFINE(NDBM) best_dbm=-ldb)
AC_CHECK_LIB(gdbm, gdbm_open, AC_DEFINE(GDBM) best_dbm=-lgdbm)
AC_SUBST(best_dbm)
if test "a$best_dbm" = a; then
	AC_MSG_WARN(No dbm library found - using built-in flatfile support)
else
	AC_MSG_RESULT($best_dbm chosen)
fi

AC_CHECK_LIB(c, socket, [:], [
 AC_CHECK_LIB(socket, socket, [
  LIBS="-lsocket $LIBS"
  AC_DEFINE(HAVE_LIBSOCKET) ], []) ])

AC_CHECK_LIB(c, gethostbyaddr, [:], [
 AC_CHECK_LIB(nsl, gethostbyaddr, [
  LIBS="-lnsl $LIBS"
  AC_DEFINE(HAVE_LIBNSL) ], []) ])

AC_CHECK_LIB(c, crypt, [:], [
 AC_CHECK_LIB(crypt, crypt, [
  LIBS="-lcrypt $LIBS"
  AC_DEFINE(HAVE_LIBCRYPT) ], []) ])

AC_CHECK_LIB(c, dlopen, [
 # fake it
 AC_DEFINE(HAVE_LIBDL) ], [
 AC_CHECK_LIB(dl, dlopen, [
  LIBS="-ldl $LIBS"
  AC_DEFINE(HAVE_LIBDL) ], []) ])

AC_CHECK_LIB(m, sin)
AC_CHECK_LIB(gd, gdImageLine,
 [ LIBS="-lgd $LIBS"
   AC_DEFINE(HAVE_LIBGD)
 ])

dnl Checks for header files.
AC_HEADER_STDC
AC_HEADER_DIRENT
AC_MISSING_FCLOSE_DECL
AC_CHECK_HEADERS(fcntl.h unistd.h crypt.h sys/file.h memory.h pwd.h grp.h sys/socket.h sys/wait.h syslog.h string.h sys/varargs.h stdarg.h sys/time.h signal.h)
if test "$best_dbm" = "-lgdbm"; then
	AC_CHECK_HEADER(gdbm.h, [ GDBM_INCLUDE="" ], [ 
		AC_MSG_RESULT("Try /usr/local/include/gdbm.h"); 
		AC_CHECK_HEADER(/usr/local/include/gdbm.h, [ GDBM_INCLUDE="-I/usr/local/include" ],[
			AC_MSG_RESULT("Try /opt/local/include/gdbm.h");
			AC_CHECK_HEADER(/opt/local/include/gdbm.h, [ GDBM_INCLUDE="-I/opt/local/include" ],[
				AC_MSG_RESULT("Giving up - You need to install gdbm.h somewhere");
				exit
			])
		])	
	])
	AC_SUBST(GDBM_INCLUDE)
fi

dnl Checks for typedefs, structures, and compiler characteristics.
AC_STRUCT_TM

dnl Check for members of the stat structure
AC_STRUCT_ST_BLKSIZE
AC_STRUCT_ST_BLOCKS
AC_STRUCT_ST_RDEV

dnl Checks for types
AC_TYPE_SIZE_T
AC_TYPE_UID_T

dnl Checks for library functions.
AC_FUNC_VPRINTF
AC_CHECK_FUNCS(memcpy memmove strdup strerror strcasecmp strstr flock lockf putenv tempnam usleep setlocale gettimeofday setvbuf srand48 lrand48 srandom random link symlink regcomp getlogin cuserid vsnprintf snprintf gcvt utime crypt setitimer rint)
AC_FUNC_UTIME_NULL
AC_FUNC_ALLOCA
AC_REPLACE_FUNCS(getopt)

AC_MSG_CHECKING(whether to use bundled regex library)
AC_ARG_WITH(system-regex,
[  --with-system-regex     Do not use the bundled regex library],
[
	REGEX_LIB=
	HSREGEX=no
 	AC_MSG_RESULT(no)
	AC_DEFINE(REGEX,0)
],[
	REGEX_LIB=regex/libregex.a
	HSREGEX=yes
 	AC_MSG_RESULT(yes)
    AC_DEFINE(HSREGEX)
	AC_DEFINE(REGEX,1)
])
AC_SUBST(REGEX_LIB)
AC_SUBST(HSREGEX)

AC_MSG_CHECKING(for Apache module support)
AC_ARG_WITH(apache,
[  --with-apache[=DIR]     Build Apache module.  DIR is the top-level Apache
                          build directory, defaults to /usr/local/etc/httpd.],
[
	if test "$withval" = "yes"; then
	  # Apache's default directory
	  withval=/usr/local/etc/httpd
	fi
	if test "$withval" != "no"; then
# For Apache 1.2.x
	  if test -f $withval/src/httpd.h; then 
	    APACHE_INCLUDE=-I$withval/src
	    APACHE_TARGET=$withval/src
	    BINNAME=libphp3.a
	    AC_DEFINE(APACHE)
	    AC_MSG_RESULT(yes)
		STRONGHOLD=
# For Apache 1.3.x
	  elif test -f $withval/src/main/httpd.h; then
	    APACHE_INCLUDE="-I$withval/src/main -I$withval/src/os/unix -I$withval/src/ap"
	    APACHE_TARGET=$withval/src/modules/extra
	    BINNAME=libphp3.a
	    AC_DEFINE(APACHE)
	    AC_MSG_RESULT(yes)
		STRONGHOLD=
# Also for Apache 1.3.x
	  elif test -f $withval/src/include/httpd.h; then
	    APACHE_INCLUDE="-I$withval/src/include -I$withval/src/os/unix"
	    APACHE_TARGET=$withval/src/modules/extra
	    BINNAME=libphp3.a
	    AC_DEFINE(APACHE)
	    AC_MSG_RESULT(yes)
		STRONGHOLD=
# For StrongHold 2.2
	  elif test -f $withval/apache/httpd.h; then
	    APACHE_INCLUDE=-I$withval/apache
	    APACHE_TARGET=$withval/apache
	    BINNAME=libphp3.a
		STRONGHOLD=-DSTRONGHOLD=1
		AC_MSG_RESULT(yes - StrongHold)
	  else
	    AC_MSG_RESULT(no)
	    AC_MSG_ERROR(Invalid Apache directory - unable to find httpd.h under $withval)
	  fi
	  INSTALL_IT="cp $BINNAME mod_php3.* $APACHE_TARGET"
	else
	  AC_MSG_RESULT(no)
	  BINNAME=php
	  INSTALL_IT="cp $BINNAME \$(bindir)"
	fi
],[
	AC_MSG_RESULT(no)
	BINNAME=php
	INSTALL_IT="cp $BINNAME \$(bindir)"
])
AC_SUBST(APACHE_INCLUDE)
AC_SUBST(APACHE_TARGET)
AC_SUBST(INSTALL_IT)
AC_SUBST(BINNAME)
AC_SUBST(STRONGHOLD)


AC_MSG_CHECKING(for Oracle support)
AC_ARG_WITH(oracle,
[  --with-oracle[=DIR]     Include Oracle database support.  DIR is Oracle's
                          home directory, defaults to \$ORACLE_HOME.],
[
 case "$withval" in
    yes)
      ORACLEINST_TOP=$ORACLE_HOME
      AC_MSG_RESULT(yes)
      ;;
    no)
      ORACLEINST_TOP=
      AC_MSG_RESULT(no)
      ;;
    *)
      AC_MSG_RESULT(yes)
      ORACLEINST_TOP=$withval
      ;;
  esac

  if test "$ORACLEINST_TOP" != ""
  then

    # Oracle include files
    if test -d "$ORACLEINST_TOP/rdbms/demo"
    then
      # V7.[0123]
      ORACLE_INCDIR=rdbms/demo
      ORACLE_INCLUDE=-I$ORACLEINST_TOP/$ORACLE_INCDIR
    fi

    # Need to know the version, otherwhise we will mixup nlsrtl
    AC_ORACLE_VERSION($ORACLEINST_TOP)

    # Oracle libs - nightmare :-)

    ORACLE_LIBDIR=lib
    ORACLE_LFLAGS=-L$ORACLEINST_TOP/$ORACLE_LIBDIR
    if test -f "$ORACLEINST_TOP/rdbms/lib/sysliblist"
    then
      ORA_SYSLIB="`cat $ORACLEINST_TOP/rdbms/lib/sysliblist`"
    else
      ORA_SYSLIB="-lm"
    fi

    # Oracle Static libs
    case $ORACLE_VERSION in
      7.0|7.1)
  	ORACLE_STLIBS="-locic $ORACLEINST_TOP/$ORACLE_LIBDIR/osntab.o \
            -lsqlnet -lora -lsqlnet -lnlsrtl -lcv6 -lcore -lnlsrtl -lcv6 \
            -lcore $ORA_SYSLIB -lcore $ORA_SYSLIB"
  	;;
      7.2)
  	ORACLE_STLIBS="-locic $ORACLEINST_TOP/$ORACLE_LIBDIR/osntab.o \
            -lsqlnet -lora -lsqlnet -lora -lnlsrtl3 -lc3v6 -lcore3 -lnlsrtl3 \
            -lcore3 $ORA_SYSLIB -lcore3 $ORA_SYSLIB"
  	;;
      7.3)
  	ORACLE_STLIBS="-lclient -lsqlnet -lncr -lsqlnet -lclient -lcommon \
  	    -lgeneric -lsqlnet -lncr -lsqlnet -lclient -lcommon -lgeneric \
            -lepc -lnlsrtl3 -lc3v6 -lcore3 -lnlsrtl3 -lcore3 -lnlsrtl3 \
            $ORA_SYSLIB -lcore3 $ORA_SYSLIB"
  	;;
      *)
  	ORACLE_STLIBS=
  	;;
    esac
  
    # Oracle shared libs
    case $ORACLE_VERSION in
      7.0)
  	# shared libs not supported
  	ORACLE_SHLIBS="$ORACLE_STLIBS"
  	;;
      7.1)
  	if test -f $ORACLEINST_TOP/$ORACLE_LIBDIR/liboracle.s?
  	then
  	  ORACLE_SHLIBS="-loracle $ORA_SYSLIB"
  	else
  	  ORACLE_SHLIBS="$ORACLE_STLIBS"
  	fi
  	;;
      7.2|7.3)
  	if test -f $ORACLEINST_TOP/$ORACLE_LIBDIR/libclntsh.s?
  	then
  	  ORACLE_SHLIBS="-lclntsh $ORA_SYSLIB"
  	else
  	  ORACLE_SHLIBS="$ORACLE_STLIBS"
  	fi
  	;;
      *)
  	ORACLE_SHLIBS=
  	;;
    esac
  
    # only using shared libs right now
    ORACLE_LIBS=$ORACLE_SHLIBS

    AC_DEFINE(HAVE_ORACLE)

  fi

],[AC_MSG_RESULT(no)])
AC_SUBST(ORACLE_SHLIBS)
AC_SUBST(ORACLE_STLIBS)
AC_SUBST(ORACLE_LIBS)
AC_SUBST(ORACLE_LFLAGS)
AC_SUBST(ORACLE_INCLUDE)
AC_SUBST(ORACLE_HOME)
AC_SUBST(ORACLE_VERSION)


AC_MSG_CHECKING(for iODBC support)
AC_ARG_WITH(iodbc,
[  --with-iodbc[=DIR]      Include iODBC support.  DIR is the iODBC base
                          install directory, defaults to /usr/local.],
[
	if test "$withval" = "yes"; then
	  withval=/usr/local
	fi
	if test "$withval" != "no"; then

	  IODBC_INCDIR=$withval/include
	  IODBC_LIBDIR=$withval/lib
	  IODBC_LFLAGS=-L$IODBC_LIBDIR
	  IODBC_INCLUDE=-I$IODBC_INCDIR
	  IODBC_LIBS=-liodbc
      UODBC_DEFAULT=yes

	  AC_DEFINE(HAVE_IODBC)

	  AC_MSG_RESULT(yes)

	fi
],[
	AC_MSG_RESULT(no)
])
AC_SUBST(IODBC_LIBS)
AC_SUBST(IODBC_LFLAGS)
AC_SUBST(IODBC_INCLUDE)


AC_MSG_CHECKING(for Adabas support)
AC_ARG_WITH(adabas,
[  --with-adabas[=DIR]     Include Adabas D support.  DIR is the Adabas base
                          install directory, defaults to /usr/local.],
[
  if test "$withval" = "yes"; then
    withval=/usr/local
  fi
  if test "$withval" != "no"; then
    ADA_INCDIR=$withval/incl
    ADA_LIBDIR=$withval/lib
    ADA_LFLAGS=-L$ADA_LIBDIR
    ADA_INCLUDE=-I$ADA_INCDIR
    ADA_LIBS="${ADA_LIBDIR}/odbclib.a -lsqlrte -lsqlptc"
    AC_DEFINE(HAVE_ADABAS)
    AC_MSG_RESULT(yes)
  else
    AC_MSG_RESULT(no)
  fi
],[
  AC_MSG_RESULT(no)
])
AC_SUBST(ADA_LIBS)
AC_SUBST(ADA_LFLAGS)
AC_SUBST(ADA_INCLUDE)


AC_MSG_CHECKING(for Sybase support)
AC_ARG_WITH(sybase,
[  --with-sybase[=DIR]     Include Sybase-DB support.  DIR is the Sybase home
                          directory, defaults to /home/sybase.],
[
  if test "$withval" != "no"; then
  	if test "$withval" = "yes"; then
		SYBASE_INCDIR=/home/sybase/include
		SYBASE_LIBDIR=/home/sybase/lib
   	else
   		SYBASE_INCDIR=$withval/include
   		SYBASE_LIBDIR=$withval/lib
   	fi
    SYBASE_INCLUDE=-I$SYBASE_INCDIR
    SYBASE_LFLAGS="-L$SYBASE_LIBDIR -L$SYBASE_LIBDIR"
    SYBASE_LIBS=-lsybdb
    AC_MSG_RESULT(yes)
    AC_CHECK_LIB(dnet_stub, dnet_addr,
     [ SYBASE_LIBS="$SYBASE_LIBS -ldnet_stub"
        AC_DEFINE(HAVE_LIBDNET_STUB)
     ])
    AC_DEFINE(HAVE_SYBASE)
  else
  	AC_MSG_RESULT(no)
  fi
],[
  AC_MSG_RESULT(no)
])
AC_SUBST(SYBASE_LIBS)
AC_SUBST(SYBASE_LFLAGS)
AC_SUBST(SYBASE_INCLUDE)

AC_MSG_CHECKING(for Sybase-CT support)
AC_ARG_WITH(sybase-ct,
[  --with-sybase-ct[=DIR]  Include Sybase-CT support.  DIR is the Sybase home
                          directory, defaults to /home/sybase.],
[
  if test "$withval" != "no"; then
  	if test "$withval" = "yes"; then
		SYBASE_CT_INCDIR=/home/sybase/include
		SYBASE_CT_LIBDIR=/home/sybase/lib
   	else
   		SYBASE_CT_INCDIR=$withval/include
   		SYBASE_CT_LIBDIR=$withval/lib
   	fi
    SYBASE_CT_INCLUDE=-I$SYBASE_CT_INCDIR
    SYBASE_CT_LFLAGS="-L$SYBASE_CT_LIBDIR"
    SYBASE_CT_LIBS="-lcs -lct -lcomn -lintl -lsybtcl -linsck"
    AC_MSG_RESULT(yes)
    AC_DEFINE(HAVE_SYBASE_CT)
  else
  	AC_MSG_RESULT(no)
  fi
],[
  AC_MSG_RESULT(no)
])
AC_SUBST(SYBASE_CT_LIBS)
AC_SUBST(SYBASE_CT_LFLAGS)
AC_SUBST(SYBASE_CT_INCLUDE)


AC_MSG_CHECKING(for MySQL support)
AC_ARG_WITH(mysql,
[  --with-mysql[=DIR]      Include MySQL support.  DIR is the MySQL base
                          install directory, defaults to /usr/local.],
[
  if test "$withval" != "no"; then
  	if test "$withval" = "yes"; then
		MYSQL_INCDIR=/usr/local/include/mysql
   		MYSQL_LIBDIR=/usr/local/lib/mysql
   	else
		if test -f $withval/include/mysql/mysql.h; then
   			MYSQL_INCDIR=$withval/include/mysql
   			MYSQL_LIBDIR=$withval/lib/mysql
		elif test -f $withval/include/mysql.h; then
   			MYSQL_INCDIR=$withval/include
   			MYSQL_LIBDIR=$withval/lib
		else
	    		AC_MSG_RESULT(no)
	    		AC_MSG_ERROR(Invalid MySQL directory - unable to find mysql.h under $withval)
		fi
   	fi
    MYSQL_INCLUDE=-I$MYSQL_INCDIR
    MYSQL_LFLAGS=-L$MYSQL_LIBDIR
    MYSQL_LIBS=-lmysqlclient

    AC_DEFINE(HAVE_MYSQL)
    AC_MSG_RESULT(yes)

    dnl check for errmsg.h, which isn't installed by some versions of 3.21
    CPPFLAGS="$CPPFLAGS $MYSQL_INCLUDE"
    AC_CHECK_HEADERS(errmsg.h)
  else
  	AC_MSG_RESULT(no)
dnl Why are we defining HAVE_MYSQL here??
  	AC_DEFINE(HAVE_MYSQL)
  fi
],[
  AC_MSG_RESULT(no)
])
AC_SUBST(MYSQL_LIBS)
AC_SUBST(MYSQL_LFLAGS)
AC_SUBST(MYSQL_INCLUDE)


AC_MSG_CHECKING(for mSQL support)
AC_ARG_WITH(msql,
[  --with-msql[=DIR]       Include mSQL support.  DIR is the mSQL base
                          install directory, defaults to /usr/local/Hughes.],
[
  if test "$withval" != "no"; then
  	if test "$withval" = "yes"; then
      MSQL_INCDIR=/usr/local/Hughes/include
      MSQL_LIBDIR=/usr/local/Hughes/lib
   	else
      MSQL_INCDIR=$withval/include
      MSQL_LIBDIR=$withval/lib
   	fi
    MSQL_INCLUDE=-I$MSQL_INCDIR
    MSQL_LFLAGS=-L$MSQL_LIBDIR
    MSQL_LIBS=-lmsql

    AC_DEFINE(HAVE_MSQL)
    AC_MSG_RESULT(yes)
    AC_MSQL_VERSION
  else
  	AC_MSG_RESULT(no)
  fi
],[
  AC_MSG_RESULT(no)
])
AC_SUBST(MSQL_LIBS)
AC_SUBST(MSQL_LFLAGS)
AC_SUBST(MSQL_INCLUDE)

AC_MSG_CHECKING(for PostgresSQL support)
AC_ARG_WITH(pgsql,
[  --with-pgsql[=DIR]      Include PostgresSQL support.  DIR is the PostgresSQL
                          base install directory, defaults to /usr/local/pgsql.],
[
  if test "$withval" != "no"; then
  	if test "$withval" = "yes"; then
	    PGSQL_INCDIR=/usr/local/pgsql/include
   		PGSQL_LIBDIR=/usr/local/pgsql/lib
   	else
   		PGSQL_INCDIR=$withval/include
   		PGSQL_LIBDIR=$withval/lib
   	fi
    PGSQL_INCLUDE=-I$PGSQL_INCDIR
    PGSQL_LFLAGS=-L$PGSQL_LIBDIR
    PGSQL_LIBS=-lpq

    AC_DEFINE(HAVE_PGSQL)

    AC_MSG_RESULT(yes)
  else
  	AC_MSG_RESULT(no)
  fi
],[
  AC_MSG_RESULT(no)
])
AC_SUBST(PGSQL_LIBS)
AC_SUBST(PGSQL_LFLAGS)
AC_SUBST(PGSQL_INCLUDE)


AC_MSG_CHECKING(for Solid support)
AC_ARG_WITH(solid,
[  --with-solid[=DIR]      Include Solid support.  DIR is the Solid base
                          install directory, defaults to /usr/local/solid],
[
  if test "$withval" != "no"; then
  	if test "$withval" = "yes"; then
	    SOLID_INCDIR=/usr/local/solid/include
   		SOLID_LIBDIR=/usr/local/solid/lib
   	else
   		SOLID_INCDIR=$withval/include
   		SOLID_LIBDIR=$withval/lib
   	fi
    SOLID_INCLUDE=-I$SOLID_INCDIR

    AC_DEFINE(HAVE_SOLID)

    AC_MSG_RESULT(yes)
  else
  	AC_MSG_RESULT(no)
  fi
],[
  AC_MSG_RESULT(no)
])
if test "$SOLID_LIBDIR" != ""; then
  AC_FIND_SOLID_LIBS($SOLID_LIBDIR)
fi
AC_SUBST(SOLID_INCLUDE)
AC_SUBST(SOLID_LIBS)


AC_MSG_CHECKING(for LDAP support)
AC_ARG_WITH(ldap,
[  --with-ldap[=DIR]       Include LDAP support.  DIR is the LDAP base
                          install directory, defaults to /usr/local/ldap],
[
  if test "$withval" != "no"; then
  	if test "$withval" = "yes"; then
	    LDAP_INCDIR=/usr/local/ldap/include
   		LDAP_LIBDIR=/usr/local/ldap/lib
   	else
   		LDAP_INCDIR=$withval/include
   		LDAP_LIBDIR=$withval/lib
   	fi
    LDAP_INCLUDE=-I$LDAP_INCDIR
    LDAP_LFLAGS=-L$LDAP_LIBDIR
    LDAP_LIBS="-lldap -llber"

    AC_DEFINE(HAVE_LDAP)

    AC_MSG_RESULT(yes)
  else
  	AC_MSG_RESULT(no)
  fi
],[
  AC_MSG_RESULT(no)
])
AC_SUBST(LDAP_LIBS)
AC_SUBST(LDAP_LFLAGS)
AC_SUBST(LDAP_INCLUDE)


AC_MSG_CHECKING(whether to include the bundled dbase library)
AC_ARG_WITH(dbase,
[  --with-dbase            Include the bundled dbase library],
[
  if test "$withval" = "yes"; then
	AC_MSG_RESULT(yes)
	AC_DEFINE(DBASE,1)
	DBASE_LIB=dbase/libdbf.a
  else
	AC_MSG_RESULT(no)
	AC_DEFINE(DBASE,0)
	DBASE_LIB=
  fi
],[
  AC_MSG_RESULT(no)
  AC_DEFINE(DBASE,0)
  DBASE_LIB=
])
AC_SUBST(DBASE_LIB)


AC_MSG_CHECKING(whether to include the bundled filePro support)
AC_ARG_WITH(filepro,
[  --with-filepro          Include the bundled read-only filePro support],[
  if test "$withval" = "yes"; then
    AC_DEFINE(HAVE_FILEPRO, 1)
    AC_MSG_RESULT(yes)
  else
    AC_DEFINE(HAVE_FILEPRO, 0)
    AC_MSG_RESULT(no)
  fi
],[
  AC_DEFINE(HAVE_FILEPRO, 0)
  AC_MSG_RESULT(no)
]) 


AC_MSG_CHECKING(whether to enable unified ODBC support)
AC_ARG_ENABLE(unified-odbc,
[  --enable-unified-odbc   Enable unified ODBC support.],
[
  if test "$enableval" = "yes"; then
    if test "$with_solid" != ""; then
      UODBC_TYPE=solid
    elif test "$with_iodbc" != ""; then
      UODBC_TYPE=iodbc
    elif test "$with_adabas" != ""; then
      UODBC_TYPE=adabas
    else
      AC_MSG_ERROR([no ODBC library!  Include Solid, iODBC or Adabas D support.])
    fi
    AC_DEFINE(HAVE_UODBC, 1)
    AC_MSG_RESULT([yes, using $UODBC_TYPE])
  else
    AC_DEFINE(HAVE_UODBC, 0)
    AC_MSG_RESULT(no)
  fi
],[
  if test "$UODBC_DEFAULT" = "yes"; then
  	AC_DEFINE(HAVE_UODBC, 1)
  	AC_MSG_RESULT(yes)
  else
  	AC_DEFINE(HAVE_UODBC, 0)
  	AC_MSG_RESULT(no)
  fi
])


AC_MSG_CHECKING(whether to use a configuration file)
AC_ARG_WITH(config-file-path,
[  --with-config-file-path=PATH  Sets the path in which to look for php3.ini
                          defaults to /usr/local/lib],
[
  if test "$withval" = "yes"; then
    AC_DEFINE_UNQUOTED(CONFIGURATION_FILE_PATH, "php3.ini")
    AC_DEFINE(USE_CONFIG_FILE, 1)
    AC_MSG_RESULT(yes)
  else
    if test "$withval" != "no"; then
      AC_DEFINE_UNQUOTED(CONFIGURATION_FILE_PATH, "$withval")
      AC_DEFINE(USE_CONFIG_FILE, 1)
      AC_MSG_RESULT(yes)
    else
      AC_DEFINE(CONFIGURATION_FILE_PATH, 0)
      AC_DEFINE(USE_CONFIG_FILE, 0)
      AC_MSG_RESULT(no)
    fi
  fi
],[
  AC_DEFINE_UNQUOTED(CONFIGURATION_FILE_PATH, "/usr/local/lib")
  AC_DEFINE(USE_CONFIG_FILE, 1)
  AC_MSG_RESULT(yes)
]) 


AC_MSG_CHECKING(whether to include debugging symbols)
AC_ARG_ENABLE(debug,
[  --disable-debug         Don't compile with debugging symbols],
[
  if test "$enableval" = "no"; then
    AC_MSG_RESULT(no)
    AC_DEFINE(DEBUG,0)
    PHP_DEBUG=0
    DEBUG_CFLAGS=""
  else
    AC_MSG_RESULT(yes)
    AC_DEFINE(DEBUG,1)
    PHP_DEBUG=1
    DEBUG_CFLAGS="-g"
    test -n "$GCC" && DEBUG_CFLAGS="$DEBUG_CFLAGS -Wall"
    test -n "$GCC" && test "$USE_MAINTAINER_MODE" = "yes" && \
      DEBUG_CFLAGS="$DEBUG_CFLAGS -Wmissing-prototypes -Wstrict-prototypes -Wmissing-declarations"
  fi
],[
  AC_MSG_RESULT(yes)
  AC_DEFINE(DEBUG,1)
  PHP_DEBUG=1
  DEBUG_CFLAGS="-g"
  test -n "$GCC" && DEBUG_CFLAGS="$DEBUG_CFLAGS -Wall"
  test -n "$GCC" && test "$USE_MAINTAINER_MODE" = "yes" && \
    DEBUG_CFLAGS="$DEBUG_CFLAGS -Wmissing-prototypes -Wstrict-prototypes -Wmissing-declarations"
]) 
AC_SUBST(DEBUG_CFLAGS)
AC_SUBST(PHP_DEBUG)


AC_MSG_CHECKING(whether to enable safe mode by default)
AC_ARG_ENABLE(safe-mode,
[  --enable-safe-mode      Enable safe mode by default.],
[
  if test "$enableval" = "yes"; then
    AC_DEFINE(PHP_SAFE_MODE, 1)
    AC_MSG_RESULT(yes)
  else
    AC_DEFINE(PHP_SAFE_MODE, 0)
    AC_MSG_RESULT(no)
  fi
],[
    AC_DEFINE(PHP_SAFE_MODE, 0)
    AC_MSG_RESULT(no)
]) 


AC_MSG_CHECKING(for safe mode exec dir)
AC_ARG_WITH(exec-dir,
[  --with-exec-dir[=DIR]   Only allow executables in DIR when in safe mode
                          defaults to /usr/local/bin],
[
  if test "$withval" != "no"; then
  	if test "$withval" = "yes"; then
		AC_DEFINE(PHP_SAFE_MODE_EXEC_DIR,"/usr/local/bin")
    	AC_MSG_RESULT(/usr/local/bin)
   	else
		AC_DEFINE_UNQUOTED(PHP_SAFE_MODE_EXEC_DIR,"$withval")
    	AC_MSG_RESULT($withval)
   	fi
  else
	AC_DEFINE(PHP_SAFE_MODE_EXEC_DIR,"/usr/local/bin")
   	AC_MSG_RESULT(/usr/local/bin)
  fi
],[
	AC_DEFINE(PHP_SAFE_MODE_EXEC_DIR,"/usr/local/bin")
   	AC_MSG_RESULT(/usr/local/bin)
])


AC_MSG_CHECKING(whether to enable track_vars variables by default)
AC_ARG_ENABLE(track-vars,
[  --enable-track-vars     Enable GET/POST/Cookie track variables by default.],
[
  if test "$enableval" = "yes"; then
    AC_DEFINE(PHP_TRACK_VARS, 1)
    AC_MSG_RESULT(yes)
  else
    AC_DEFINE(PHP_TRACK_VARS, 0)
    AC_MSG_RESULT(no)
  fi
],[
    AC_DEFINE(PHP_TRACK_VARS, 0)
    AC_MSG_RESULT(no)
]) 


AC_MSG_CHECKING(whether to enable magic quotes by default)
AC_ARG_ENABLE(magic-quotes,
[  --enable-magic-quotes   Enable magic quotes by default.],
[
  if test "$enableval" = "yes"; then
    AC_DEFINE(MAGIC_QUOTES, 1)
    AC_MSG_RESULT(yes)
  else
    AC_DEFINE(MAGIC_QUOTES, 0)
    AC_MSG_RESULT(no)
  fi
],[
    AC_DEFINE(MAGIC_QUOTES, 0)
    AC_MSG_RESULT(no)
]) 


AC_MSG_CHECKING(whether to enable remote debugger support)
AC_ARG_ENABLE(debugger,
[  --enable-debugger       Compile with remote debugging functions.],
[
  if test "$enableval" = "yes"; then
    AC_DEFINE(PHP_DEBUGGER, 1)
    AC_MSG_RESULT(yes)
  else
    AC_DEFINE(PHP_DEBUGGER, 0)
    AC_MSG_RESULT(no)
  fi
],[
  AC_DEFINE(PHP_DEBUGGER, 0)
  AC_MSG_RESULT(no)
]) 

AC_MSG_CHECKING(whether to enable bc style precision math functions)
AC_ARG_ENABLE(bcmath,
[  --enable-bcmath         Compile with bc style precision math functions. ],
[
  if test "$enableval" = "yes"; then
    AC_DEFINE(WITH_BCMATH, 1)
    AC_MSG_RESULT(yes)
  else
    AC_DEFINE(WITH_BCMATH, 0)
    AC_MSG_RESULT(no)
  fi
],[
  AC_DEFINE(WITH_BCMATH, 0)
  AC_MSG_RESULT(no)
]) 

AC_MSG_CHECKING(whether to enable a memory limit)
AC_ARG_ENABLE(memory-limit,
[  --enable-memory-limit         Compile with memory limit support. ],
[
  if test "$enableval" = "yes"; then
    AC_DEFINE(MEMORY_LIMIT, 1)
    AC_MSG_RESULT(yes)
  else
    AC_DEFINE(MEMORY_LIMIT, 0)
    AC_MSG_RESULT(no)
  fi
],[
  AC_DEFINE(MEMORY_LIMIT, 1)
  AC_MSG_RESULT(no)
]) 

AC_MSG_CHECKING(whether to enable short tags by default)
AC_ARG_ENABLE(short-tags,
[  --disable-short-tags    Disable the short-form <? start tag by default.],
[
  if test "$enableval" = "no"; then
    AC_DEFINE(DEFAULT_SHORT_OPEN_TAG, 0)
    AC_MSG_RESULT(no)
  else
    AC_DEFINE(DEFAULT_SHORT_OPEN_TAG, 1)
    AC_MSG_RESULT(yes)
  fi
],[
  AC_DEFINE(DEFAULT_SHORT_OPEN_TAG, 1)
  AC_MSG_RESULT(yes)
]) 

AC_MSG_CHECKING(whether to enable the URL-aware fopen wrapper)
AC_ARG_ENABLE(url-fopen-wrapper,
[  --enable-url-fopen-wrapper Enable the URL-aware fopen wrapper that allows
                          accessing files via http or ftp. WARNING! This
                          features should be used with extreme care. See the
                          "Security" chapter of the documentation.],
[
  if test "$enableval" = "yes"; then
    AC_DEFINE(PHP3_URL_FOPEN, 1)
    AC_MSG_RESULT(yes)
    AC_MSG_WARN([You should read the "Security" chapter of the documentation
                    before allowing the URL-aware fopen wrapper!])
  else
    AC_DEFINE(PHP3_URL_FOPEN, 0)
    AC_MSG_RESULT(no)
  fi
],[
  AC_DEFINE(PHP3_URL_FOPEN, 0)
  AC_MSG_RESULT(no)
])

dnl If we're using gcc and the user hasn't specified CFLAGS, add -O2.
test -n "$auto_cflags" && test -n "$GCC" && CFLAGS="-O2"

AC_SUBST(CFLAGS)
AC_SUBST(PROG_SENDMAIL)

BUILD_DATE=`date '+%Y-%m-%d'`
AC_SUBST(BUILD_DATE)
AC_OUTPUT(Makefile build-defs.h stamp-h mod_php3.module doc/Makefile doc/version.ent)

# Local Variables:
# tab-width: 4
# End:
