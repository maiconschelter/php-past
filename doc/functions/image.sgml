
 <reference id="ref.image">
  <title>Image functions</title>

  <refentry id="function.getimagesize">
   <refnamediv>
    <refname>GetImageSize</refname>
    <refpurpose>get the size of a GIF, JPG or PNG image</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>array <function>getimagesize</function></funcdef>
     <paramdef>string <parameter>filename</parameter></paramdef>
    </funcsynopsis>
    <para>
     The GetImageSize function will determine the size of any GIF, JPG
     or PNG image file and return the dimensions along with the file
     type and a height/width text string to be used inside a normal
     HTML IMG tag.

    <para>
     Returns an array with 4 elements.  Index 0 contains the width of
     the image in pixels.  Index 1 contains the height.  Index 2 a flag
     indicating the type of the image.  1 = GIF, 2 = JPG, 3 = PNG.
     Index 3 is a text string with the correct  "height=xxx width=xxx"
     string that can be used directly in an IMG tag.
     <example>
      <title>GetImageSize</title>
      <programlisting>
&lt;?php $size = GetImageSize("img/flag.jpg"); ?>
&lt;IMG SRC="img/flag.jpg" &lt;?php echo $size[3]; ?>>
</programlisting></example>

     <note><simpara>
       This function does not require the GD image library.
      </simpara></note>

   </refsect1>
  </refentry>


  <refentry id="function.imagearc">
   <refnamediv>
    <refname>ImageArc</refname>
    <refpurpose>draw a partial ellipse</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>int <function>imagearc</function></funcdef>
     <paramdef>int <parameter>im</parameter></paramdef>
     <paramdef>int <parameter>cx</parameter></paramdef>
     <paramdef>int <parameter>cy</parameter></paramdef>
     <paramdef>int <parameter>w</parameter></paramdef>
     <paramdef>int <parameter>h</parameter></paramdef>
     <paramdef>int <parameter>s</parameter></paramdef>
     <paramdef>int <parameter>e</parameter></paramdef>
     <paramdef>int <parameter>col</parameter></paramdef>
    </funcsynopsis>
    <para>
     ImageArc draws a partial ellipse centered at cx, cy (top left is
     0,0) in the image represented by im.  w and h specifies the
     ellipse's width and height respectively while the start and end
     points are specified in degrees indicated by the s and e
     arguments.

   </refsect1>
  </refentry>


  <refentry id="function.imagechar">
   <refnamediv>
    <refname>ImageChar</refname>
    <refpurpose>draw a character horizontally</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>int <function>imagechar</function></funcdef>
     <paramdef>int <parameter>im</parameter></paramdef>
     <paramdef>int <parameter>font</parameter></paramdef>
     <paramdef>int <parameter>x</parameter></paramdef>
     <paramdef>int <parameter>y</parameter></paramdef>
     <paramdef>string <parameter>c</parameter></paramdef>
     <paramdef>int <parameter>col</parameter></paramdef>
    </funcsynopsis>
    <para>
     ImageChar draws the first character of c in the image identified
     by id at coordinates x, y (top left is 0,0) with the color col.
     If font is 1, 2, 3, 4 or 5, a built-in font is used.

    <para>
     See also <link
     linkend="function.imageloadfont">imageloadfont</link>.

   </refsect1>
  </refentry>


  <refentry id="function.imagecharup">
   <refnamediv>
    <refname>ImageCharUp</refname>
    <refpurpose>draw a character vertically</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>int <function>imagecharup</function></funcdef>
     <paramdef>int <parameter>im</parameter></paramdef>
     <paramdef>int <parameter>font</parameter></paramdef>
     <paramdef>int <parameter>x</parameter></paramdef>
     <paramdef>int <parameter>y</parameter></paramdef>
     <paramdef>string <parameter>c</parameter></paramdef>
     <paramdef>int <parameter>col</parameter></paramdef>
    </funcsynopsis>
<para>    ImageCharUp draws the character c vertically in the
    image identified by im at coordinates x,
    y (top left is 0, 0) with the color col.
    If font is 1, 2, 3, 4 or 5, a built-in font is used.
  <para>    See also <link linkend="function.imageloadfont">imageloadfont</link>.
   </refsect1>
  </refentry>


  <refentry id="function.imagecolorallocate">
   <refnamediv>
    <refname>ImageColorAllocate</refname>
    <refpurpose>allocate a color for an image</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>int <function>imagecolorallocate</function></funcdef>
     <paramdef>int <parameter>im</parameter></paramdef>
     <paramdef>int <parameter>red</parameter></paramdef>
     <paramdef>int <parameter>green</parameter></paramdef>
     <paramdef>int <parameter>blue</parameter></paramdef>
    </funcsynopsis>
<para>    ImageColorAllocate returns a color identifier representing the
    color composed of the given RGB components.  The im
    argument is the return from the <link linkend="function.imagecreate">imagecreate</link>
    function.  ImageColorAllocate must be called to create each color
    that is to be used in the image represented by im.
   </refsect1>
  </refentry>


  <refentry id="function.imagecolortransparent">
   <refnamediv>
    <refname>ImageColorTransparent</refname>
    <refpurpose>define a color as transparent</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>int <function>imagecolortransparent</function></funcdef>
     <paramdef>int <parameter>im</parameter></paramdef>
     <paramdef>int <parameter>col</parameter></paramdef>
    </funcsynopsis>
<para>    ImageColorTransparent sets the transparent color in the im image
    to col.  im is the image identifier returned by <link linkend="function.imagecreate">imagecreate</link> and col is the color identifier returned by
    <link linkend="function.imagecolorallocate">imagecolorallocate</link>.
   </refsect1>
  </refentry>


  <refentry id="function.imagecopyresized">
   <refnamediv>
    <refname>ImageCopyResized</refname>
    <refpurpose>copy and resize part of an image</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>int <function>imagecopyresized</function></funcdef>
     <paramdef>int <parameter>dst_im</parameter></paramdef>
     <paramdef>int <parameter>src_im</parameter></paramdef>
     <paramdef>int <parameter>dstX</parameter></paramdef>
     <paramdef>int <parameter>dstY</parameter></paramdef>
     <paramdef>int <parameter>srcX</parameter></paramdef>
     <paramdef>int <parameter>srcY</parameter></paramdef>
     <paramdef>int <parameter>dstW</parameter></paramdef>
     <paramdef>int <parameter>dstH</parameter></paramdef>
     <paramdef>int <parameter>srcW</parameter></paramdef>
     <paramdef>int <parameter>srcH</parameter></paramdef>
    </funcsynopsis>
    <para>
     ImageCopyResized copies a rectangular portion of one image to
     another image.  <parameter>dst_im</parameter> is the destination
     image, <parameter>src_im</parameter> is the source image
     identifier.  If the source and destination coordinates and width
     and heights differ, appropriate stretching or shrinking of the
     image fragment will be performed.  The coordinates refer to the
     upper left corner.  This function can be used to copy regions
     within the same image (if <parameter>dst_im</parameter> is the
     same as <parameter>src_im</parameter>) but if the regions overlap
     the results will be unpredictable.
   </refsect1>
  </refentry>


  <refentry id="function.imagecreate">
   <refnamediv>
    <refname>ImageCreate</refname>
    <refpurpose>create a new image</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>int <function>imagecreate</function></funcdef>
     <paramdef>int <parameter>x_size</parameter></paramdef>
     <paramdef>int <parameter>y_size</parameter></paramdef>
    </funcsynopsis>
<para>    ImageCreate returns an image identifier representing a blank image
    of size x_size by y_size.
   </refsect1>
  </refentry>


  <refentry id="function.imagecreatefromgif">
   <refnamediv>
    <refname>ImageCreateFromGif</refname>
    <refpurpose>create a new image from file or URL</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>int <function>imagecreatefromgif</function></funcdef>
     <paramdef>string <parameter>filename</parameter></paramdef>
    </funcsynopsis>
<para>    ImageCreateFromGif returns an image identifier representing the
    image obtained from the given filename.
   </refsect1>
  </refentry>

  <refentry id="function.imagedashedline">
   <refnamediv>
    <refname>ImageDashedLine</refname>
    <refpurpose>draw a dashed line</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>int <function>imagedashedline</function></funcdef>
     <paramdef>int <parameter>im</parameter></paramdef>
     <paramdef>int <parameter>x1</parameter></paramdef>
     <paramdef>int <parameter>y1</parameter></paramdef>
     <paramdef>int <parameter>x2</parameter></paramdef>
     <paramdef>int <parameter>y2</parameter></paramdef>
     <paramdef>int <parameter>col</parameter></paramdef>
    </funcsynopsis>
<para>    ImageLine draws a dashed line from x1,y1 to
    x2,y2 (top left is
    0,0) in image im of color
    col.
  <para>    See also <link linkend="function.imageline">imageline</link>.
   </refsect1>
  </refentry>

  <refentry id="function.imagedestroy">
   <refnamediv>
    <refname>ImageDestroy</refname>
    <refpurpose>destroy an image</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>int <function>imagedestroy</function></funcdef>
     <paramdef>int <parameter>im</parameter></paramdef>
    </funcsynopsis>
<para>    ImageDestroy frees any memory associated with image im.  im is the
    image identifier returned by the <link linkend="function.imagecreate">imagecreate</link>
    function.
   </refsect1>
  </refentry>


  <refentry id="function.imagefill">
   <refnamediv>
    <refname>ImageFill</refname>
    <refpurpose>flood fill</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>int <function>imagefill</function></funcdef>
     <paramdef>int <parameter>im</parameter></paramdef>
     <paramdef>int <parameter>x</parameter></paramdef>
     <paramdef>int <parameter>y</parameter></paramdef>
     <paramdef>int <parameter>col</parameter></paramdef>
    </funcsynopsis>
<para>    ImageFill performs a flood fill starting at coordinate x, y (top left is 0,0) with color col in the image im.
   </refsect1>
  </refentry>


  <refentry id="function.imagefilledpolygon">
   <refnamediv>
    <refname>ImageFilledPolygon</refname>
    <refpurpose>draw a filled polygon</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>int <function>imagefilledpolygon</function></funcdef>
     <paramdef>int <parameter>im</parameter></paramdef>
     <paramdef>array <parameter>points</parameter></paramdef>
     <paramdef>int <parameter>num_points</parameter></paramdef>
     <paramdef>int <parameter>col</parameter></paramdef>
    </funcsynopsis>
<para>    ImageFilledPolygon creates a filled polygon in image im.  points is a PHP array containing the
    polygon's vertices, ie. points[0] = x0,
    points[1] = y0, points[2] = x1,
    points[3] = y1, etc.  num_points is the
    total number of vertices.
   </refsect1>
  </refentry>


  <refentry id="function.imagefilledrectangle">
   <refnamediv>
    <refname>ImageFilledRectangle</refname>
    <refpurpose>draw a filled rectangle</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>int <function>imagefilledrectangle</function></funcdef>
     <paramdef>int <parameter>im</parameter></paramdef>
     <paramdef>int <parameter>x1</parameter></paramdef>
     <paramdef>int <parameter>y1</parameter></paramdef>
     <paramdef>int <parameter>x2</parameter></paramdef>
     <paramdef>int <parameter>y2</parameter></paramdef>
     <paramdef>int <parameter>col</parameter></paramdef>
    </funcsynopsis>
<para>    ImageFilledRectangle creates a filled rectangle of color col in
    image im starting at upper left coordinates x1,
    y1 and ending at bottom right coordinates x2, y2.  0, 0 is the
    top left corner of the image.
   </refsect1>
  </refentry>


  <refentry id="function.imagefilltoborder">
   <refnamediv>
    <refname>ImageFillToBorder</refname>
    <refpurpose>flood fill to specific color</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>int <function>imagefilltoborder</function></funcdef>
     <paramdef>int <parameter>im</parameter></paramdef>
     <paramdef>int <parameter>x</parameter></paramdef>
     <paramdef>int <parameter>y</parameter></paramdef>
     <paramdef>int <parameter>border</parameter></paramdef>
     <paramdef>int <parameter>col</parameter></paramdef>
    </funcsynopsis>
<para>    ImageFillToBorder performs a flood fill whose border color is
    defined by border.  The starting point for the fill
    is x,y (top left is
    0,0) and the region is filled with color
    col.
   </refsect1>
  </refentry>


  <refentry id="function.imagefontheight">
   <refnamediv>
    <refname>ImageFontHeight</refname>
    <refpurpose>get font height</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>int <function>imagefontheight</function></funcdef>
     <paramdef>int <parameter>font</parameter></paramdef>
    </funcsynopsis>
<para>    Returns the pixel width of a character in font.
  <para>    See also <link linkend="function.imagefontwidth">imagefontwidth</link> and <link linkend="function.imageloadfont">imageloadfont</link>.
   </refsect1>
  </refentry>


  <refentry id="function.imagefontwidth">
   <refnamediv>
    <refname>ImageFontWidth</refname>
    <refpurpose>get font width</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>int <function>imagefontwidth</function></funcdef>
     <paramdef>int <parameter>font</parameter></paramdef>
    </funcsynopsis>
<para>    Returns the pixel width of a character in font.
  <para>    See also <link linkend="function.imagefontheight">imagefontheight</link> and <link linkend="function.imageloadfont">imageloadfont</link>.
   </refsect1>
  </refentry>


  <refentry id="function.imagegif">
   <refnamediv>
    <refname>ImageGif</refname>
    <refpurpose>output image to browser or file</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>int <function>imagegif</function></funcdef>
     <paramdef>int <parameter>im</parameter></paramdef>
     <paramdef>string <parameter>filename</parameter></paramdef>
    </funcsynopsis>
<para>    ImageGif creates the GIF file in filename from the image im.  The im argument is the return from the
    <link linkend="function.imagecreate">imagecreate</link> function.
  <para>    The image format will be GIF87a unless the image has
    been made transparent with <link linkend="function.imagecolortransparent">imagecolortransparent</link>, in
    which case the image format will be GIF89a.
  <para>    The filename argument is optional, and if left off,
    the raw image stream will be output directly.  By sending an
    image/gif content-type using the 

    header

    function, you can create a PHP script that outputs GIF images
    directly.
   </refsect1>
  </refentry>


  <refentry id="function.imageinterlace">
   <refnamediv>
    <refname>ImageInterlace</refname>
    <refpurpose>enable or disable interlace</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>int <function>imageinterlace</function></funcdef>
     <paramdef>int <parameter>im</parameter></paramdef>
     <paramdef>int <parameter>interlace</parameter></paramdef>
    </funcsynopsis>
<para>    ImageInterlace turns the interlace bit on or off.  If interlace is
    1 the im image will be interlaced, and if interlace is 0 the
    interlace bit is turned off.
   </refsect1>
  </refentry>


  <refentry id="function.imageline">
   <refnamediv>
    <refname>ImageLine</refname>
    <refpurpose>draw a line</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>int <function>imageline</function></funcdef>
     <paramdef>int <parameter>im</parameter></paramdef>
     <paramdef>int <parameter>x1</parameter></paramdef>
     <paramdef>int <parameter>y1</parameter></paramdef>
     <paramdef>int <parameter>x2</parameter></paramdef>
     <paramdef>int <parameter>y2</parameter></paramdef>
     <paramdef>int <parameter>col</parameter></paramdef>
    </funcsynopsis>
<para>    ImageLine draws a line from x1,y1 to
    x2,y2 (top left is
    0,0) in image im of color
    col.
  <para>    See also <link linkend="function.imagecreate">imagecreate</link> and <link linkend="function.imagecolorallocate">imagecolorallocate</link>.
   </refsect1>
  </refentry>


  <refentry id="function.imageloadfont">
   <refnamediv>
    <refname>ImageLoadFont</refname>
    <refpurpose>load a new font</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>int <function>imageloadfont</function></funcdef>
     <paramdef>string <parameter>file</parameter></paramdef>
    </funcsynopsis>
    <para>
     ImageLoadFont loads a user-defined bitmap font and returns an
     identifier for the font (that is always greater than 5, so it will
     not conflict with the built-in fonts).

    <para>
     The font file format is currently binary and architecture
     dependent.  This means you should generate the font files on the
     same type of CPU as the machine you are running PHP on.

    <para>
     <table>
      <title>Font file format</title>
      <tgroup cols="3">
       <thead>
	<row>
	 <entry>byte position</entry>
	 <entry>C data type</entry>
	 <entry>description</entry>
	</row>
       </thead>
       <tbody>
	<row>
	 <entry>byte 0-3</entry>
	 <entry>int</entry>
	 <entry>number of characters in the font</entry>
	</row>
	<row>
	 <entry>byte 4-7</entry>
	 <entry>int</entry>
	 <entry>
	   value of first character in the font (often 32 for space)
	  </entry>
	</row>
	<row>
	 <entry>byte 8-11</entry>
	 <entry>int</entry>
	 <entry>pixel width of each character</entry>
	</row>
	<row>
	 <entry>byte 12-15</entry>
	 <entry>int</entry>
	 <entry>pixel height of each character</entry>
	</row>
	<row>
	 <entry>byte 16-</entry>
	 <entry>char</entry>
	 <entry>
	   array with character data, one byte per pixel in each
	   character, for a total of (nchars*width*height) bytes.
	  </entry>
	</row>
	
       </tbody>
      </tgroup>
     </table>

    <para>
     See also <link
     linkend="function.imagefontwidth">ImageFontWidth</link> and
     <link
     linkend="function.imagefontheight">ImageFontHeight</link>.

   </refsect1>
  </refentry>


  <refentry id="function.imagepolygon">
   <refnamediv>
    <refname>ImagePolygon</refname>
    <refpurpose>draw a polygon</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>int <function>imagepolygon</function></funcdef>
     <paramdef>int <parameter>im</parameter></paramdef>
     <paramdef>int <parameter>points</parameter></paramdef>
     <paramdef>int <parameter>num_points</parameter></paramdef>
     <paramdef>int <parameter>col</parameter></paramdef>
    </funcsynopsis>
<para>    ImagePolygon creates a polygon in image id.  points is a PHP array containing the polygon's vertices,
    ie. points[0] = x0, points[1] = y0,
    points[2] = x1, points[3] = y1, etc.  num_points is the total number of vertices.
  <para>    See also <link linkend="function.imagecreate">imagecreate</link>.
   </refsect1>
  </refentry>


  <refentry id="function.imagerectangle">
   <refnamediv>
    <refname>ImageRectangle</refname>
    <refpurpose>draw a rectangle</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>int <function>imagerectangle</function></funcdef>
     <paramdef>int <parameter>im</parameter></paramdef>
     <paramdef>int <parameter>x1</parameter></paramdef>
     <paramdef>int <parameter>y1</parameter></paramdef>
     <paramdef>int <parameter>x2</parameter></paramdef>
     <paramdef>int <parameter>y2</parameter></paramdef>
     <paramdef>int <parameter>col</parameter></paramdef>
    </funcsynopsis>
<para>    ImageRectangle creates a rectangle of color col in image im
    starting at upper left coordinate x1,y1 and ending at bottom right coordinate x2,y2.  0,0 is the top
    left corner of the image.
   </refsect1>
  </refentry>


  <refentry id="function.imagesetpixel">
   <refnamediv>
    <refname>ImageSetPixel</refname>
    <refpurpose>set a single pixel</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>int <function>imagesetpixel</function></funcdef>
     <paramdef>int <parameter>im</parameter></paramdef>
     <paramdef>int <parameter>x</parameter></paramdef>
     <paramdef>int <parameter>y</parameter></paramdef>
     <paramdef>int <parameter>col</parameter></paramdef>
    </funcsynopsis>
<para>    ImageSetPixel draws a pixel at x,y
    (top left is 0,0) in image im
    of color col.
  <para>    See also <link linkend="function.imagecreate">imagecreate</link> and <link linkend="function.imagecolorallocate">imagecolorallocate</link>.
   </refsect1>
  </refentry>


  <refentry id="function.imagestring">
   <refnamediv>
    <refname>ImageString</refname>
    <refpurpose>draw a string horizontally</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>int <function>imagestring</function></funcdef>
     <paramdef>int <parameter>im</parameter></paramdef>
     <paramdef>int <parameter>font</parameter></paramdef>
     <paramdef>int <parameter>x</parameter></paramdef>
     <paramdef>int <parameter>y</parameter></paramdef>
     <paramdef>string <parameter>s</parameter></paramdef>
     <paramdef>int <parameter>col</parameter></paramdef>
    </funcsynopsis>
<para>    ImageString draws the string s in the image identified by im at coordinates x,y (top
    left is 0,0) in color col.  If
    font is 1, 2, 3, 4 or 5, a built-in font is used.
  <para>    See also <link linkend="function.imageloadfont">imageloadfont</link>.
   </refsect1>
  </refentry>


  <refentry id="function.imagestringup">
   <refnamediv>
    <refname>ImageStringUp</refname>
    <refpurpose>draw a string vertically</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>int <function>imagestringup</function></funcdef>
     <paramdef>int <parameter>im</parameter></paramdef>
     <paramdef>int <parameter>font</parameter></paramdef>
     <paramdef>int <parameter>x</parameter></paramdef>
     <paramdef>int <parameter>y</parameter></paramdef>
     <paramdef>string <parameter>s</parameter></paramdef>
     <paramdef>int <parameter>col</parameter></paramdef>
    </funcsynopsis>
<para>    ImageStringUp draws the string s vertically in the image
    identified by im at coordinates x,y (top left is 0,0)
    in color col.
    If font is 1, 2, 3, 4 or 5, a built-in font is used.
  <para>    See also <link linkend="function.imageloadfont">imageloadfont</link>.
   </refsect1>
  </refentry>


  <refentry id="function.imagesx">
   <refnamediv>
    <refname>ImageSX</refname>
    <refpurpose>get image width</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>int <function>imagesx</function></funcdef>
     <paramdef>int <parameter>im</parameter></paramdef>
    </funcsynopsis>
<para>    ImageSX returns the width of the image identified by
    im.
  <para>    See also <link linkend="function.imagecreate">imagecreate</link> and <link linkend="function.imagesy">imagesy</link>.
   </refsect1>
  </refentry>


  <refentry id="function.imagesy">
   <refnamediv>
    <refname>ImageSY</refname>
    <refpurpose>get image height</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>int <function>imagesy</function></funcdef>
     <paramdef>int <parameter>im</parameter></paramdef>
    </funcsynopsis>
<para>    ImageSY returns the height of the image identified by
    im.

  <para>    See also <link linkend="function.imagecreate">imagecreate</link> and <link linkend="function.imagesx">imagesx</link>.
   </refsect1>
  </refentry>


 </reference>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->
