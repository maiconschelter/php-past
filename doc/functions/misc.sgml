 <reference id="ref.misc">
  <title>Miscellaneous Functions</title>
  <titleabbrev>Misc.</titleabbrev>

  <partintro>
   <para>
    These functions were placed here because none of the other
    categories seemed to fit.
  </partintro>

  <refentry id="function.eval">
   <refnamediv>
    <refname>eval</refname>
    <refpurpose>Evaluate a string as PHP code</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>void <function>eval</function></funcdef>
     <paramdef>string <parameter>code_str</parameter></paramdef>
    </funcsynopsis>
    
    <simpara>
     <function>eval</function> evaluates the string given in
     <parameter>code_str</parameter> as PHP code. Among other things,
     this can be useful for storing code in a database text field for
     later execution.

    <simpara>
     There are some factors to keep in mind when using
     <function>eval</function>. Remember that the string passed must
     be valid PHP code, including things like terminating statements
     with a semicolon so the parser doesn't die on the line after the
     <function>eval</function>, and properly escaping things in
     <parameter>code_str</parameter>. 

    <simpara>
     Also remember that variables given values under
     <function>eval</function> will retain these values in the main
     script afterwards.

    <para>
     <example>
      <title>eval() example - simple text merge</title>
      <programlisting>
&lt;?php
$string = 'cup';
$name = 'coffee';
$str = 'This is a $string with my $name in it.&lt;br&gt;';
echo $str;
eval( "\$str = \"$str\";" );
echo $str;
?&gt;
      </programlisting>
     </example>

    <para>
     The above example will show:
      <programlisting>
This is a $string with my $name in it.
This is a cup with my coffee in it.
      </programlisting>

   </refsect1>
  </refentry>


  <refentry id="function.leak">
   <refnamediv>
    <refname>leak</refname>
    <refpurpose>Leak memory</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>void <function>leak</function></funcdef>
     <paramdef>int <parameter>bytes</parameter></paramdef>
    </funcsynopsis>
    <simpara>
     <function>Leak</function> leaks the specified amount of memory.
    <simpara>
     This is useful when debugging the memory manager, which automatically
     cleans up "leaked" memory when each request is completed.
   </refsect1>
  </refentry>

 <refentry id="function.register-shutdown-function">
  <refnamediv>
   <refname>register_shutdown_function</refname>
   <refpurpose>Register a function for execution on shutdown.</refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
   <funcsynopsis>
    <funcdef>int <function>register_shutdown_function</function></funcdef>
    <paramdef>string <parameter>func</parameter></paramdef>
   </funcsynopsis>
   <simpara>
     Registers the function named by <parameter>func</parameter> to be
     executed when script processing is complete. 
  </refsect1>
 </refentry>

  <refentry id="function.sleep">
   <refnamediv>
    <refname>sleep</refname>
    <refpurpose>Delay execution</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>void <function>sleep</function></funcdef>
     <paramdef>int <parameter>seconds</parameter></paramdef>
    </funcsynopsis>
    <simpara>
     The sleep function delays program execution for the given number
     of <parameter>seconds</parameter>.
    <simpara>
     See also <function>usleep</function>.
   </refsect1>
  </refentry>

  <refentry id="function.usleep">
   <refnamediv>
    <refname>usleep</refname>
    <refpurpose>Delay execution in microseconds</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>void <function>usleep</function></funcdef>
     <paramdef>int <parameter>micro_seconds</parameter></paramdef>
    </funcsynopsis>
    <simpara>
     The sleep function delays program execution for the given number
     of <parameter>micro_seconds</parameter>.
    <simpara>
     See also <function>sleep</function>.
   </refsect1>
  </refentry>

  <refentry id="function.uniqid">
   <refnamediv>
    <refname>uniqid</refname>
    <refpurpose>generate a unique id</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>int <function>uniqid</function></funcdef>
     <paramdef>string <parameter>prefix</parameter></paramdef>
    </funcsynopsis>
    <simpara>
     <function>Uniqid</function> returns a prefixed unique identifier based on
     current time in microseconds. The prefix can be useful for instance if you
     generate identifiers simultaneously on several hosts that might happen to
     generate the identifier at the same microsecond. The prefix can be up to 114
     characters long.
   </refsect1>
  </refentry>

</reference>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->
